#ifdef GPU
  module function_gpu
#else
  module function
#endif
  use iso_c_binding
  integer :: funcptr
#ifdef GPU
  attributes(device) :: funcptr
#else
  bind(C,name="__FUNC_kernel3") :: funcptr
#endif
  character(32), bind(C,name="__GPUFMT_kernel3_1") :: l_7 = "(I6,2X,G2&
 &0.14,I5,4X,18(2I2,1X))" // c_null_char

  end module



#ifdef GPU
  attributes(global) &
#endif
  subroutine kernel3
#ifdef GPU
  use asyncio_gpu
  use function_gpu
#else
  use asyncio
  use function
#endif
  implicit none

  integer :: l, i, ii, io, j(6)
  double precision :: c

#ifndef GPU
  print *, 'ASYNCIO version:'
  call asyncio_open(4,file='read.txt',form='formatted',status='old')
  do l = 1, 3
    call asyncio_read_begin(4, funcptr, 1)
    call asyncio_read(ii)
    call asyncio_read(c)
    call asyncio_read(io)
    do i = 1, 6
      call asyncio_read(j(i))
    enddo
    call asyncio_end()

    print *, ii
    print *, c
    print *, io
    print *, j(1:6)
  enddo
  call asyncio_close(4)
#endif

  end subroutine kernel3



#ifndef GPU
  subroutine kernel3_cpu

  use function

  implicit none

  integer :: l, i, ii, io, j(6)
  double precision :: c

  print *, 'Fortran I/O version:'
  open(4, file = "read.txt")
  do l = 1, 3
    read(4, l_7) ii, c, io, (j(i), i=1,6)

    print *, ii
    print *, c
    print *, io
    print *, j(1:6)
  enddo
  close(4)

  end subroutine kernel3_cpu
#endif

