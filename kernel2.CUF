#ifdef GPU
  module function_gpu
#else
  module function
#endif
  integer :: funcptr
#ifdef GPU
  attributes(device) :: funcptr
#else
  bind(C,name="__FUNC_kernel2") :: funcptr
#endif
  character(5), bind(C,name="__GPUFMT_kernel2_123") :: _123 = '(I8)'C
  end module



#ifdef GPU
  attributes(global) &
#endif
  subroutine kernel2
#ifdef GPU
  use asyncio_gpu
  use function_gpu
#else
  use asyncio
  use function
#endif
  implicit none

  integer, parameter :: length = 1024
  real, dimension(length) :: arr
  integer :: i
  integer(8) :: i8

  do i = 1, length
    arr(i) = i
  enddo

  i8 = i

  call asyncio_begin('*','*')
  call asyncio_write(arr(length / 8))
  call asyncio_write(arr(length))
  call asyncio_write(length)
  call asyncio_write(i8)
  call asyncio_end()

  call asyncio_begin('*', funcptr, 123)
  call asyncio_write(i8)
  call asyncio_end()

  call asyncio_begin('*','*')
  call asyncio_write(arr(length / 16))
  call asyncio_write(arr(length))
  call asyncio_write(length)
  call asyncio_write(i8)
  call asyncio_end()

  call asyncio_begin(3,'*')
  call asyncio_write(arr(length) + 2)
  call asyncio_write(arr(length / 4))
  call asyncio_end()

  call asyncio_begin(0, funcptr, 123)
  call asyncio_write(i8)
  call asyncio_end()

  end subroutine kernel2

